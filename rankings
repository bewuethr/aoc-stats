#!/bin/bash

gen_histogram () {
    jq -r '.members[].completion_day_level[][].get_star_ts' < leaderboard2016.json |
    cut -c 12-13 |
    sort |
    uniq -c |
    awk '{ print $2 "\t" $1 }' > histodata.txt

    gnuplot < histo.gpi > histo.png
}

rank_day_star () {
    local day=$1
    local star=$2
    local basedate
    local name
    local time

    printf -v basedate '2016-12-%02dT00:00:00-05:00' "$day"

    jq -r --arg day "$day" --arg star "$star" '
        [.members[]] |
        map( {name, tstamp: .completion_day_level[$day][$star].get_star_ts} ) |
        sort_by(.tstamp)[] |
        select(.name != null) |
        select(.tstamp != null) |
        [.name, .tstamp] |
        @tsv
    ' < leaderboard2016.json |
    while IFS=$'\t' read name time; do
        printf '%s\t%s\n' "$name" "$(( $(date +'%s' -d "$time") - $(date +'%s' -d "$basedate") ))"
    done |
    awk -F "\t" -v day="$day" -v star="$star" '
        { printf "%2d\t%s\t%3d:%02d\n", NR, $1, int($2/3600), int(($2%3600)/60) }
    '
}

print_header () {
    local csspath=$1
    local title=$2


    cat <<EOF
        <!doctype html>
        <html>
        <head>
        <meta charset=utf-8>
        <link rel="stylesheet" href="${1}style.css">
        <link rel="shortcut icon" href="${1}favicon.png" type="image/x-icon">
        <title>$title</title>
        </head>
        <body>
        <h1>$title</h1>
EOF
}

tablify () {
    local fname=$1
    local col3_heading=$2
    awk -v col3_heading="$col3_heading" -v fname="$fname" '
        BEGIN {
            FS = "\t"
            print "<div><table>"
            print "<tr>"
            print "<th>Rank</th>"
            print "<th>Name</th>"
            print "<th>" col3_heading "</th>"
            print "</tr>"
        }
        {
            print "<tr>"
            for (i = 1; i <= NF; ++i)
                print "<td>" $i "</td>"
            print "</tr>"
        }
        END {
            print "</table></div>"
            print "<p>Raw text file: <a href=\"" fname "\">" fname "</a></p>"
            print "<p><a href=\"..\">Return to index</a></p>"
        }
    '
}

gen_txt_files () {
    local day
    local star

    for day in {01..25}; do
        for star in 1 2; do
            rank_day_star "${day#0}" "$star" > "day${day}star$star".txt
        done
    done
}

gen_local_score () {
    awk '
        BEGIN {
            FS = "\t"
            PROCINFO["sorted_in"] = "@val_num_desc"
        }
        { rank[$2][FILENAME] = $1 }
        END {
            n = length(rank)
            for (i in rank)
                for (j in rank[i])
                    score[i] += n - rank[i][j] + 1
            for (i in score)
                printf "%d\t%s\t%d\n", ++ranking, i, score[i]
        }
    ' day??star?.txt > local_score.txt
}

gen_mod_local_score () {
    awk '
        BEGIN {
            FS = "\t"
            PROCINFO["sorted_in"] = "@val_num_desc"
        }
        { rank[$2] = $1 }
        ENDFILE {
            for (i in rank)
                score[i] += FNR - rank[i] + 1
            delete rank
        }
        END {
            for (i in score)
                printf "%d\t%s\t%d\n", ++ranking, i, score[i]
        }
    ' day??star?.txt > mod_local_score.txt
}

gen_html_files () {
    local re='day([0-9]+)star([0-9])'
    local fname
    for fname in day*star*.txt; do
        [[ $fname =~ $re ]]
        day=${BASH_REMATCH[1]}
        star=${BASH_REMATCH[2]}

        {
            print_header "../" "Ranking day ${day#0}, star $star"
            tablify "$fname" 'Time to solve [H:M]' < "$fname"
        } | tidy "${tidyopts[@]}" > "${fname%.txt}.html"
    done

    {
        print_header "../" "Local score"
        echo "<p>For each star, winner gets one point per participant, runner-up one less etc.</p>"
        tablify local_score.txt Points < local_score.txt
    } | tidy "${tidyopts[@]}" > local_score.html

    {
        print_header "../" "Modified local score"
        echo "<p>For each star, winner gets one point per submission <em>to that star</em>, runner-up one less etc.</p>"
        tablify mod_local_score.txt Points < mod_local_score.txt
    } | tidy "${tidyopts[@]}" > mod_local_score.html

    {
        print_header "../" "Histogram of submission times"
        cat <<EOF
            <img src="histo.png" alt="Histogram of submission times">
            <ul>
            <li><p>Source data: <a href="histodata.txt">histodata.txt</a></p></li>
            <li><p>Script to generate histogram: <a href="histo.gpi">histo.gpi</a></p></li>
            </ul>
            <p><a href="..">Return to index</a></p>
EOF
    } | tidy "${tidyopts[@]}" > histo.html
}

gen_index () {
    {
        print_header "" "Advent of Code 2016, IX Stats"

        cat <<EOF
            <h2>Overall rankings and statistics</h2>
            <ul>
            <li><p><a href="data/local_score.html">Local score</a></p></li>
            <li><p><a href="data/mod_local_score.html">Modified local score</a></p></li>
            <li><p><a href="data/histo.html">Histogram of submission times</a></p></li>
            </ul>
            <h2>Rankings per day and star</h2>
            <div>
            <table id="left">
EOF

        local re='day([0-9]+)star([0-9])'
        for fname in day*star*.html; do
            [[ $fname =~ $re ]]
            day=${BASH_REMATCH[1]}
            star=${BASH_REMATCH[2]}

            if (( 10#$day == 14 && star == 1 )); then
                echo '</table><table id="right">'
            fi

            if (( star == 1 )); then
                echo "<tr>"
                echo "<td class=\"day\">Day ${day#0}</td>"
                echo "<td><a href=\"data/$fname\">Star 1</a></td>"
            elif (( star == 2 )); then
                echo "<td><a href=\"data/$fname\">Star 2</a></td>"
                echo "</tr>"
            fi
        done

        echo "<tr><td></td><td></td><td></td></tr>"

        cat <<EOF
            </table>
            </div>
            <h2>Miscellaneous</h2>
            <ul>
            <li><p>Script to generate all the stats: <a href="data/rankings">rankings</a></p></li>
            <li><p>JSON source data: <a href="data/leaderboard2016.json">leaderboard2016.json</a></p></li>
            <li><p>Suggest more stats in the <a href="https://github.com/bewuethr/advent_of_code/issues">issue tracker</a></p></li>
            </ul>
EOF
    } | tidy "${tidyopts[@]}" > ../index.html
}

tidyopts=(-iq --tidy-mark no --wrap 120)

gen_histogram
gen_txt_files
gen_local_score
gen_mod_local_score
gen_html_files
gen_index
